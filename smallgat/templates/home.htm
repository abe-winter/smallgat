{% extends "base.htm" %}
{% block title %}home{% endblock %}
{% block container %}
<noscript>
  <div class="alert alert-danger">This page requires JS to edit fields</div>
</noscript>
<h3>Your info</h3>
<div id="edit-app"></div>
<hr>
<h3>üè¢ Your institutions</h3>
<p>Institutions are things like schools, jobs, conferences and religious organizations.</p>
<p>You can join an institution by getting a share link from someone, or <a href="{{url_for('institution.get_new')}}">start an institution page</a> if one doesn't exist yet.</p>
{% if not insts %}
<div class="alert alert-warning">You don't have any institutions yet.</div>
{% else %}
<table class="table">
  <tr>
    <th>Name</th>
    <th>External URL</th>
    <th>Kind</th>
  </tr>
{% for instid, name, url, kind in insts %}
<tr>
  <td><a href="{{url_for('institution.inst', instid=instid)}}">{{name}}</a></td>
  <td><a href="{{url}}">{{url}}</a></td>
  <td>{{kind}}</td>
</tr>
{% endfor %}
</table>
{% endif %}
<hr>
<h3>‚õ∫ Your groups</h3>
<p>Groups are the small meetup units you've been assigned. To find a group, first join an institution and then click into it.</p>
{% if not groups %}
<div class="alert alert-warning">You don't have any groups yet.</div>
{% else %}<ul>
  {% for inst_name, instid, groupid in groups %}
  <li>
    <a href="{{url_for('group.view', groupid=groupid)}}">Your group</a> in institution <a href="{{url_for('institution.inst', instid=instid)}}">{{inst_name}}</a>
  </li>
  {% endfor %}
</ul>{% endif %}
<hr>
<details>
  <summary>Advanced controls</summary>
  <form action="{{url_for('user.delete_me')}}" method="post">
    <button class="btn btn-danger" role="submit">Delete user</button>
  </form>
</details>
<script src="https://cdn.jsdelivr.net/npm/vue"></script>
<script type="text/javascript">
Vue.component('required', {
  props: ['val'],
  {% raw %}
  template: `<span v-if="val">{{val}}</span>
  <span v-else style="color: red">required</span>`
  {% endraw %}
});

const VUE = new Vue({
  el: '#edit-app',
  data: () => ({
    email: {{email|tojson}},
    name: {{name|tojson}},
    age: {{age|tojson}},
    address: {{address|tojson}},
    gmaps_link: {{gmaps_link|tojson}},
  }),
  computed: {
    incomplete() {
      return !(this.name && this.age && this.address);
    },
  },
  methods: {
    async edit(field) {
      const val = prompt(`Enter your ${field}`);
      if (val == null) {
        return;
      }
      this[field] = val;
      const res = await fetch('/user/edit', {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ field, val }),
      });
    },
  },
  {% raw %}
  template: `<div>
    <div v-if="incomplete" class="alert alert-danger">Your account is incomplete. You can't join groups until you populate all the fields</div>
    <div v-if="age && age < 13" class="alert alert-danger">You can't use this site if you're under 13</div>
    <table class="table">
      <tr>
        <th>Email</th>
        <td>{{email}}</td>
      </tr>
      <tr>
        <th>Name</th>
        <td @click="edit('name')" style="cursor: pointer"><required :val="name" /> ‚úèÔ∏è</td>
      </tr>
      <tr>
        <th>Age</th>
        <td @click="edit('age')" style="cursor: pointer"><required :val="age" /> ‚úèÔ∏è</td>
      </tr>
      <tr>
        <td><b>Address</b><br>(Okay to leave it approximate)</td>
        <td @click="edit('address')" style="cursor: pointer"><required :val="address" /> ‚úèÔ∏è</td>
      </tr>
    </table>
    <div class="alert alert-info" v-if="address && gmaps_link"><a :href="gmaps_link">Google maps location</a> for where we think your address is</div>
    <div class="alert alert-warning" v-else-if="address">Couldn't understand your address. If you just changed it, wait a second and reload</div>
  </div>`,
  {% endraw %}
});
</script>
{% endblock container %}
